// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tour {
  id  Int    @id @default(autoincrement())
  uId String @unique @default(uuid())

  name            String   @unique
  summary         String
  difficulty      String
  description     String
  imageCover      String
  images          String[]
  createdAt       DateTime @default(now())
  price           Float
  discountPrice   Float?
  ratingsAverage  Float?   @default(4.5)
  duration        Int
  maxGroupSize    Int
  ratingsQuantity Int?     @default(0)
  startDates      String[]

  guides  User[]
  reviews Review[]

  @@map("Tours")
}

model User {
  id String @id @unique @default(uuid())

  name              String
  email             String   @unique
  photo             String?
  active            Boolean  @default(true)
  password          String
  passwordConfirm   String
  passwordChangedAt DateTime @default(now())
  roles             String[] @default(["user"])

  tours   Tour[]
  reviews Review[]

  @@map("Users")
}

model Review {
  id        String   @id @default(uuid())
  review    String
  rating    Int
  createdAt DateTime @default(now())

  Tour   Tour?   @relation(fields: [tourId], references: [id])
  tourId Int?
  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@map("Reviews")
}
